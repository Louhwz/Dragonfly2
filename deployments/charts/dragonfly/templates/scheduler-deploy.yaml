apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "dragonfly.scheduler.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.scheduler.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  namespace: {{ .Values.installation.namespace }}
  name: {{ template "dragonfly.scheduler.fullname" . }}
  {{- if .Values.scheduler.deploymentAnnotations }}
  annotations:
{{ toYaml .Values.scheduler.deploymentAnnotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.scheduler.replicas }}
  selector:
    matchLabels:
      app: {{ template "dragonfly.scheduler.fullname" . }}
      component: "{{ .Values.scheduler.name }}"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "dragonfly.scheduler.fullname" . }}
        component: "{{ .Values.scheduler.name }}"
        release: {{ .Release.Name }}
        {{- if .Values.scheduler.podAnnotations }}
      annotations:
{{ toYaml .Values.scheduler.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      {{- if .Values.scheduler.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.scheduler.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.scheduler.tolerations }}
      tolerations:
{{ toYaml .Values.scheduler.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.scheduler.affinity }}
      affinity:
{{ toYaml .Values.scheduler.affinity | indent 8 }}
      {{- end }}
      {{- if quote .Values.scheduler.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.scheduler.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1beta1") (.Values.scheduler.priorityClassName) }}
      priorityClassName: {{ .Values.scheduler.priorityClassName }}
      {{- end }}
      containers:
      - name: scheduler
        image: "{{ .Values.scheduler.image }}:{{ .Values.scheduler.tag }}"
        imagePullPolicy: {{ .Values.scheduler.pullPolicy | quote }}
        resources:
{{ toYaml .Values.scheduler.resources | indent 12 }}
        ports:
        - containerPort: {{ .Values.scheduler.containerPort }}
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: "/etc/dragonfly"
      volumes:
      - name: config
        configMap:
          name: {{ template "dragonfly.scheduler.fullname" . }}
          items:
          - key: scheduler.yaml
            path: scheduler.yaml
