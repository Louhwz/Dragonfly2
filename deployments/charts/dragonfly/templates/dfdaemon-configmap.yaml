apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "dragonfly.dfdaemon.fullname" . }}
  namespace: {{ .Values.installation.namespace }}
  labels:
    app: {{ template "dragonfly.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  dfget-daemon.yaml: |-
    alive_time: {{ .Values.dfdaemon.config.alive_time }}
    gc_interval: {{ .Values.dfdaemon.config.gc_interval }}
    pid_file: {{ .Values.dfdaemon.config.pid_file }}
    lock_file: {{ .Values.dfdaemon.config.lock_file }}
    data_dir: {{ .Values.dfdaemon.config.data_dir }}
    work_home: {{ .Values.dfdaemon.config.work_home }}
    keep_storage: {{ .Values.dfdaemon.config.keep_storage }}
    verbose: {{ .Values.dfdaemon.config.verbose }}
    scheduler:
      net_addrs:
        - type: tcp
          addr: {{template "dragonfly.scheduler.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.scheduler.service.port }}
      schedule_timeout: 5m
    host:
{{ toYaml .Values.dfdaemon.config.host | indent 6 }}
    download:
{{ toYaml .Values.dfdaemon.config.download | indent 6 }}
    upload:
{{ toYaml .Values.dfdaemon.config.upload | indent 6 }}
    storage:
{{ toYaml .Values.dfdaemon.config.storage | indent 6 }}
    proxy:
{{ toYaml .Values.dfdaemon.config.proxy | indent 6 }}
