apiVersion: v1
kind: Service
metadata:
  name: {{template "dragonfly.scheduler.fullname" . }}
  namespace: {{ .Values.installation.namespace }}
  labels:
    app: {{ template "dragonfly.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.scheduler.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
{{- if .serviceAnnotations }}
  annotations:
{{ toYaml .Values.scheduler.serviceAnnotations | indent 4 }}
{{- end }}
spec:
  ports:
    - port: {{.Values.scheduler.service.port}}
      name: http
      targetPort: {{ .Values.scheduler.service.targetPort }}
      {{- if (and (eq .Values.scheduler.service.type "NodePort") (not (empty .Values.scheduler.service.nodePort))) }}
      nodePort: {{.Values.scheduler.service.nodePort}}
      {{- end }}
{{- range $index, $port := .Values.scheduler.service.extraPorts }}
    - port: {{ $port.port }}
      name: {{ $port.name }}
      targetPort: {{ $port.port }}
{{- end }}
  selector:
    app: {{ template "dragonfly.scheduler.fullname" . }}
    component: "{{ .Values.scheduler.name }}"
    release: {{ .Release.Name }}
  type: {{.Values.scheduler.service.type}}
  {{if eq .Values.scheduler.service.type "LoadBalancer"}}
{{- if .Values.scheduler.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
{{ toYaml .Values.scheduler.service.loadBalancerSourceRanges | indent 4 }}
{{- end }}
  {{if .Values.scheduler.service.loadBalancerIP}}
  loadBalancerIP: {{.Values.scheduler.serivice.loadBalancerIP}}
  {{end}}
  {{end}}
